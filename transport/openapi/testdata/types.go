// Package testdata provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.1 DO NOT EDIT.
package testdata

// Defines values for CdcAction.
const (
	Create CdcAction = "create"
	Delete CdcAction = "delete"
	Set    CdcAction = "set"
	Update CdcAction = "update"
)

// Defines values for CdcDiffOp.
const (
	Add     CdcDiffOp = "add"
	Remove  CdcDiffOp = "remove"
	Replace CdcDiffOp = "replace"
)

// Defines values for QueryOrderByDirection.
const (
	Asc  QueryOrderByDirection = "asc"
	Desc QueryOrderByDirection = "desc"
)

// Defines values for QuerySelectAggregate.
const (
	Count QuerySelectAggregate = "count"
	Max   QuerySelectAggregate = "max"
	Min   QuerySelectAggregate = "min"
	Sum   QuerySelectAggregate = "sum"
)

// Defines values for QuerySelectFunction.
const (
	ToLower QuerySelectFunction = "toLower"
	ToUpper QuerySelectFunction = "toUpper"
)

// Defines values for QueryWhereOp.
const (
	Contains QueryWhereOp = "contains"
	Eq       QueryWhereOp = "eq"
	Gt       QueryWhereOp = "gt"
	Gte      QueryWhereOp = "gte"
	In       QueryWhereOp = "in"
	Lt       QueryWhereOp = "lt"
	Lte      QueryWhereOp = "lte"
	Neq      QueryWhereOp = "neq"
)

// Defines values for UserGender.
const (
	Female UserGender = "female"
	Male   UserGender = "male"
)

// Account defines model for Account.
type Account struct {
	// Id The account's id.
	Id string `json:"_id"`

	// Name The accounts's name.
	Name string `json:"name"`
}

// Cdc defines model for Cdc.
type Cdc struct {
	// Id The cdc entry id.
	Id *string `json:"_id,omitempty"`

	// Action The action taken upon the document
	Action CdcAction `json:"action"`

	// Collection The collection the document belongs to
	Collection string `json:"collection"`

	// Diff An array of changes made to a document
	Diff []struct {
		Op    *CdcDiffOp   `json:"op,omitempty"`
		Path  *string      `json:"path,omitempty"`
		Value *interface{} `json:"value,omitempty"`
	} `json:"diff"`

	// DocumentID The id of the document being changed
	DocumentID *string `json:"documentID,omitempty"`

	// Metadata The context metadata when the change was commited
	Metadata *map[string]interface{} `json:"metadata,omitempty"`

	// Timestamp The unix nanosecond timestamp when the change was commited
	Timestamp *int `json:"timestamp,omitempty"`
}

// CdcAction The action taken upon the document
type CdcAction string

// CdcDiffOp defines model for Cdc.Diff.Op.
type CdcDiffOp string

// Migration defines model for Migration.
type Migration struct {
	// Id The migration's id
	Id string `json:"_id"`

	// Dirty Whether the migration failed or not
	Dirty bool `json:"dirty"`

	// Error An error message if one was encountered
	Error *string `json:"error,omitempty"`

	// Script The migration script's content
	Script string `json:"script"`

	// Timestamp The unix timestamp when the migration executed
	Timestamp int `json:"timestamp"`
}

// Page Page is a list of documents returned from a query
type Page struct {
	Count     int                      `json:"count"`
	Documents []map[string]interface{} `json:"documents"`
	NextPage  int                      `json:"next_page"`
}

// Query Query is a query against a collection of documents
type Query struct {
	GroupBy *[]string `json:"groupBy,omitempty"`
	Limit   *int      `json:"limit,omitempty"`
	OrderBy *[]struct {
		Direction QueryOrderByDirection `json:"direction"`
		Field     string                `json:"field"`
	} `json:"orderBy,omitempty"`
	Page   *int `json:"page,omitempty"`
	Select []struct {
		// Aggregate an aggregate function to apply against the field
		Aggregate *QuerySelectAggregate `json:"aggregate,omitempty"`

		// As as is outputs the value of the field as an alias
		As *string `json:"as,omitempty"`

		// Field the select's field
		Field string `json:"field"`

		// Function a function to apply against the field
		Function *QuerySelectFunction `json:"function,omitempty"`
	} `json:"select"`
	Where *[]struct {
		Field string       `json:"field"`
		Op    QueryWhereOp `json:"op"`
		Value interface{}  `json:"value"`
	} `json:"where,omitempty"`
}

// QueryOrderByDirection defines model for Query.OrderBy.Direction.
type QueryOrderByDirection string

// QuerySelectAggregate an aggregate function to apply against the field
type QuerySelectAggregate string

// QuerySelectFunction a function to apply against the field
type QuerySelectFunction string

// QueryWhereOp defines model for Query.Where.Op.
type QueryWhereOp string

// Task defines model for Task.
type Task struct {
	// Id The user's id.
	Id string `json:"_id"`

	// Content The content of the task
	Content string `json:"content"`

	// User The id of the user who owns the task
	User string `json:"user"`
}

// User defines model for User.
type User struct {
	// Id The user's id.
	Id        string `json:"_id"`
	AccountId string `json:"account_id"`

	// Age Age in years which must be equal to or greater than zero.
	Age         int                     `json:"age"`
	Annotations *map[string]interface{} `json:"annotations,omitempty"`
	Contact     struct {
		// Email The user's email.
		Email *string `json:"email,omitempty"`
	} `json:"contact"`

	// Gender The user's gender.
	Gender UserGender `json:"gender"`

	// Language The user's first language.
	Language *string `json:"language,omitempty"`

	// Name The user's name.
	Name      string  `json:"name"`
	Timestamp *string `json:"timestamp,omitempty"`
}

// UserGender The user's gender.
type UserGender string

// DocID defines model for DocID.
type DocID = string

// BatchSetAccountJSONBody defines parameters for BatchSetAccount.
type BatchSetAccountJSONBody = []Account

// EditAccountJSONBody defines parameters for EditAccount.
type EditAccountJSONBody = map[string]interface{}

// BatchSetCdcJSONBody defines parameters for BatchSetCdc.
type BatchSetCdcJSONBody = []Cdc

// EditCdcJSONBody defines parameters for EditCdc.
type EditCdcJSONBody = map[string]interface{}

// BatchSetMigrationJSONBody defines parameters for BatchSetMigration.
type BatchSetMigrationJSONBody = []Migration

// EditMigrationJSONBody defines parameters for EditMigration.
type EditMigrationJSONBody = map[string]interface{}

// BatchSetTaskJSONBody defines parameters for BatchSetTask.
type BatchSetTaskJSONBody = []Task

// EditTaskJSONBody defines parameters for EditTask.
type EditTaskJSONBody = map[string]interface{}

// BatchSetUserJSONBody defines parameters for BatchSetUser.
type BatchSetUserJSONBody = []User

// EditUserJSONBody defines parameters for EditUser.
type EditUserJSONBody = map[string]interface{}

// SetAccountSchemaJSONBody defines parameters for SetAccountSchema.
type SetAccountSchemaJSONBody = string

// SetCdcSchemaJSONBody defines parameters for SetCdcSchema.
type SetCdcSchemaJSONBody = string

// SetMigrationSchemaJSONBody defines parameters for SetMigrationSchema.
type SetMigrationSchemaJSONBody = string

// SetTaskSchemaJSONBody defines parameters for SetTaskSchema.
type SetTaskSchemaJSONBody = string

// SetUserSchemaJSONBody defines parameters for SetUserSchema.
type SetUserSchemaJSONBody = string

// BatchSetAccountJSONRequestBody defines body for BatchSetAccount for application/json ContentType.
type BatchSetAccountJSONRequestBody = BatchSetAccountJSONBody

// CreateAccountJSONRequestBody defines body for CreateAccount for application/json ContentType.
type CreateAccountJSONRequestBody = Account

// QueryAccountJSONRequestBody defines body for QueryAccount for application/json ContentType.
type QueryAccountJSONRequestBody = Query

// EditAccountJSONRequestBody defines body for EditAccount for application/json ContentType.
type EditAccountJSONRequestBody = EditAccountJSONBody

// SetAccountJSONRequestBody defines body for SetAccount for application/json ContentType.
type SetAccountJSONRequestBody = Account

// BatchSetCdcJSONRequestBody defines body for BatchSetCdc for application/json ContentType.
type BatchSetCdcJSONRequestBody = BatchSetCdcJSONBody

// CreateCdcJSONRequestBody defines body for CreateCdc for application/json ContentType.
type CreateCdcJSONRequestBody = Cdc

// QueryCdcJSONRequestBody defines body for QueryCdc for application/json ContentType.
type QueryCdcJSONRequestBody = Query

// EditCdcJSONRequestBody defines body for EditCdc for application/json ContentType.
type EditCdcJSONRequestBody = EditCdcJSONBody

// SetCdcJSONRequestBody defines body for SetCdc for application/json ContentType.
type SetCdcJSONRequestBody = Cdc

// BatchSetMigrationJSONRequestBody defines body for BatchSetMigration for application/json ContentType.
type BatchSetMigrationJSONRequestBody = BatchSetMigrationJSONBody

// CreateMigrationJSONRequestBody defines body for CreateMigration for application/json ContentType.
type CreateMigrationJSONRequestBody = Migration

// QueryMigrationJSONRequestBody defines body for QueryMigration for application/json ContentType.
type QueryMigrationJSONRequestBody = Query

// EditMigrationJSONRequestBody defines body for EditMigration for application/json ContentType.
type EditMigrationJSONRequestBody = EditMigrationJSONBody

// SetMigrationJSONRequestBody defines body for SetMigration for application/json ContentType.
type SetMigrationJSONRequestBody = Migration

// BatchSetTaskJSONRequestBody defines body for BatchSetTask for application/json ContentType.
type BatchSetTaskJSONRequestBody = BatchSetTaskJSONBody

// CreateTaskJSONRequestBody defines body for CreateTask for application/json ContentType.
type CreateTaskJSONRequestBody = Task

// QueryTaskJSONRequestBody defines body for QueryTask for application/json ContentType.
type QueryTaskJSONRequestBody = Query

// EditTaskJSONRequestBody defines body for EditTask for application/json ContentType.
type EditTaskJSONRequestBody = EditTaskJSONBody

// SetTaskJSONRequestBody defines body for SetTask for application/json ContentType.
type SetTaskJSONRequestBody = Task

// BatchSetUserJSONRequestBody defines body for BatchSetUser for application/json ContentType.
type BatchSetUserJSONRequestBody = BatchSetUserJSONBody

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = User

// QueryUserJSONRequestBody defines body for QueryUser for application/json ContentType.
type QueryUserJSONRequestBody = Query

// EditUserJSONRequestBody defines body for EditUser for application/json ContentType.
type EditUserJSONRequestBody = EditUserJSONBody

// SetUserJSONRequestBody defines body for SetUser for application/json ContentType.
type SetUserJSONRequestBody = User

// SetAccountSchemaJSONRequestBody defines body for SetAccountSchema for application/json ContentType.
type SetAccountSchemaJSONRequestBody = SetAccountSchemaJSONBody

// SetCdcSchemaJSONRequestBody defines body for SetCdcSchema for application/json ContentType.
type SetCdcSchemaJSONRequestBody = SetCdcSchemaJSONBody

// SetMigrationSchemaJSONRequestBody defines body for SetMigrationSchema for application/json ContentType.
type SetMigrationSchemaJSONRequestBody = SetMigrationSchemaJSONBody

// SetTaskSchemaJSONRequestBody defines body for SetTaskSchema for application/json ContentType.
type SetTaskSchemaJSONRequestBody = SetTaskSchemaJSONBody

// SetUserSchemaJSONRequestBody defines body for SetUserSchema for application/json ContentType.
type SetUserSchemaJSONRequestBody = SetUserSchemaJSONBody
